Shader "CameraFilterPack/FX_8bits_gb" {
	Properties {
		_MainTex ("Base (RGB)", 2D) = "white" {}
		_TimeX ("Time", Range(0, 1)) = 1
		_ScreenX ("Time", Range(0, 2000)) = 1
		_ScreenY ("Time", Range(0, 2000)) = 1
		_Distortion ("_Distortion", Range(1, 10)) = 1
	}
	SubShader {
		Pass {
			ZClip Off
			ZTest Always
			GpuProgramID 50700
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    dcl_texcoord o0.xy
					    dcl_position o1
					    dcl_color o2
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o0.xy, v2
					    mov o2, v1
					    mad o1.xy, r0.w, c255, r0
					    mov o1.zw, r0
					
					// approximately 8 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					out vec4 vs_COLOR0;
					vec4 u_xlat0;
					void main()
					{
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_COLOR0 = in_COLOR0;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Distortion;
					//   sampler2D _MainTex;
					//   float _TimeX;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _TimeX       c0       1
					//   _Distortion  c1       1
					//   _MainTex     s0       1
					//
					
					    ps_3_0
					    def c2, -2.69999982e-005, -0.00409599999, -0.0359370038, 0
					    def c3, -0.00219699973, -0.0795070007, -0.0506530032, 0.5
					    def c4, -0.103822999, -0.328509003, -0.0740879923, -0.00138883968
					    def c5, -0.314432025, -0.493039042, -0.0196830016, 10000
					    def c6, 0.159154937, 0.25, 6.28318548, -3.14159274
					    def c7, -2.52398507e-007, 2.47609005e-005, 0.159154937, 0.5
					    def c8, 0.469999999, 0.689999998, 0.419999987, 0.0416666418
					    def c9, 17, 0.100000001, 0, 0.75
					    def c10, 0.680000007, 0.790000021, 0.270000011, 13
					    def c11, 1, 0.99999994, -1000, 1000
					    def c12, 0, 0.0299999993, 0.159999996, 0.330000013
					    def c13, 0.129999995, 0.430000007, 0.370000005, 2
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    frc r0.x, c0.x
					    add r0.x, -r0.x, c0.x
					    mad r0.x, r0.x, c6.x, c6.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c6.z, c6.w
					    mul r0.x, r0.x, r0.x
					    mad r0.y, r0.x, c7.x, c7.y
					    mad r0.y, r0.x, r0.y, c4.w
					    mad r0.y, r0.x, r0.y, c8.w
					    mad r0.y, r0.x, r0.y, -c3.w
					    mul r0.x, r0.y, r0.x
					    frc r0.x, r0.x
					    mad r0.xy, v0, c3.w, r0.x
					    dp2add r0.z, r0, c9, c9.z
					    mad r0.x, r0.y, c10.w, r0.x
					    mad r0.x, r0.x, c7.z, c7.w
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c6.z, c6.w
					    sincos r1.y, r0.x
					    add r0.x, r1_abs.y, c9.y
					    mad r0.y, r0.z, c7.z, c7.w
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c6.z, c6.w
					    sincos r1.y, r0.y
					    mul r0.y, r1.y, c5.w
					    mul r0.x, r0.x, r0.y
					    frc r0.x, r0.x
					    mov r1.z, c11.w
					    mul r0.yz, c11.xxyw, v0.xxyw
					    texld r2, r0.yzzw, s0
					    add r0.yzw, r2.xxyz, c1.x
					    mul r2.xyz, r0.yzww, r0.yzww
					    mad r3.xyz, r0.yzww, r2, c2
					    dp3 r2.w, r3, r3
					    min r1.y, r2.w, c11.w
					    add r1.w, r2.w, c11.z
					    cmp r3.xyz, r1.w, c12.x, c12.yzww
					    mad r4.xyz, r0.yzww, r2, c3
					    dp3 r1.x, r4, r4
					    add r1.w, -r1.y, r1.x
					    cmp r1.yz, r1.w, r1, r1.xxyw
					    mad r4.xyz, r0.yzww, r2, c4
					    mad r0.yzw, r0, r2.xxyz, c5.xxyz
					    dp3 r2.x, r0.yzww, r0.yzww
					    dp3 r1.x, r4, r4
					    add r0.y, -r1.y, r1.x
					    cmp r2.yz, r0.y, r1, r1.xxyw
					    add r0.z, -r2.y, r2.x
					    cmp r1.xy, r0.z, r2.yzzw, r2
					    add r0.w, r1.y, r1.x
					    rcp r0.w, r0.w
					    mul r0.w, r0.w, r1.y
					    mad r0.x, r0.x, c9.w, r0.w
					    add r0.w, v0.y, v0.x
					    mul r1.x, r0.w, c3.w
					    frc r1.y, r1.x
					    add r1.x, -r1.y, r1.x
					    mad r0.w, r1.x, -c13.w, r0.w
					    add r0.x, -r0.w, r0.x
					    cmp r1.xyz, r1.w, c2.w, r3
					    cmp r2.xyz, r1.w, r3, c13
					    cmp r1.xyz, r0.y, r1, r2
					    cmp r2.xyz, r0.y, r2, c8
					    cmp r1.xyz, r0.z, r1, r2
					    cmp r0.yzw, r0.z, r2.xxyz, c10.xxyz
					    cmp r0.xyz, r0.x, r0.yzww, r1
					    cmp oC0.xyz, -r0.x, c12.yzww, r0
					    mov oC0.w, c11.x
					
					// approximately 83 instruction slots used (1 texture, 82 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						float _TimeX;
						float _Distortion;
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					bool u_xlatb0;
					vec3 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					vec3 u_xlat4;
					vec3 u_xlat5;
					vec3 u_xlat6;
					vec3 u_xlat7;
					vec2 u_xlat12;
					bool u_xlatb12;
					bool u_xlatb18;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat6.x = u_xlat0.x * 0.5;
					    u_xlat6.x = floor(u_xlat6.x);
					    u_xlat0.x = (-u_xlat6.x) * 2.0 + u_xlat0.x;
					    u_xlat6.x = floor(_TimeX);
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = fract(u_xlat6.x);
					    u_xlat6.xy = vs_TEXCOORD0.xy * vec2(0.5, 0.5) + u_xlat6.xx;
					    u_xlat6.z = dot(u_xlat6.xy, vec2(17.0, 0.100000001));
					    u_xlat6.x = u_xlat6.y * 13.0 + u_xlat6.x;
					    u_xlat6.xy = sin(u_xlat6.xz);
					    u_xlat6.x = abs(u_xlat6.x) + 0.100000001;
					    u_xlat12.x = u_xlat6.y * 10000.0;
					    u_xlat6.x = u_xlat6.x * u_xlat12.x;
					    u_xlat6.x = fract(u_xlat6.x);
					    u_xlat1.z = 1000.0;
					    u_xlat12.xy = vs_TEXCOORD0.xy * vec2(1.0, 0.99999994);
					    u_xlat2 = texture(_MainTex, u_xlat12.xy);
					    u_xlat2.xyz = u_xlat2.xyz + vec3(vec3(_Distortion, _Distortion, _Distortion));
					    u_xlat3.xyz = u_xlat2.xyz * u_xlat2.xyz;
					    u_xlat4.xyz = u_xlat2.xyz * u_xlat3.xyz + vec3(-2.69999982e-05, -0.00409599999, -0.0359370038);
					    u_xlat12.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlat1.y = min(u_xlat12.x, 1000.0);
					    u_xlatb12 = u_xlat12.x<1000.0;
					    u_xlat4.xyz = bool(u_xlatb12) ? vec3(0.0299999993, 0.159999996, 0.330000013) : vec3(0.0, 0.0, 0.0);
					    u_xlat5.xyz = u_xlat2.xyz * u_xlat3.xyz + vec3(-0.00219699973, -0.0795070007, -0.0506530032);
					    u_xlat1.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb12 = u_xlat1.x<u_xlat1.y;
					    u_xlat1.yz = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat1.yz;
					    u_xlat5.xyz = u_xlat2.xyz * u_xlat3.xyz + vec3(-0.103822999, -0.328509003, -0.0740879923);
					    u_xlat2.xyz = u_xlat2.xyz * u_xlat3.xyz + vec3(-0.314432025, -0.493039042, -0.0196830016);
					    u_xlat2.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat1.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat1.x<u_xlat1.y;
					    u_xlat2.yz = (bool(u_xlatb18)) ? u_xlat1.xy : u_xlat1.yz;
					    u_xlatb1 = u_xlat2.x<u_xlat2.y;
					    u_xlat7.xy = (bool(u_xlatb1)) ? u_xlat2.xy : u_xlat2.yz;
					    u_xlat7.x = u_xlat7.y + u_xlat7.x;
					    u_xlat7.x = u_xlat7.y / u_xlat7.x;
					    u_xlat6.x = u_xlat6.x * 0.75 + u_xlat7.x;
					    u_xlatb0 = u_xlat6.x<u_xlat0.x;
					    u_xlat7.xyz = bool(u_xlatb12) ? u_xlat4.xyz : vec3(0.0, 0.0, 0.0);
					    u_xlat2.xyz = (bool(u_xlatb12)) ? vec3(0.129999995, 0.430000007, 0.370000005) : u_xlat4.xyz;
					    u_xlat7.xyz = (bool(u_xlatb18)) ? u_xlat2.xyz : u_xlat7.xyz;
					    u_xlat6.xyz = (bool(u_xlatb18)) ? vec3(0.469999999, 0.689999998, 0.419999987) : u_xlat2.xyz;
					    u_xlat7.xyz = (bool(u_xlatb1)) ? u_xlat6.xyz : u_xlat7.xyz;
					    u_xlat6.xyz = (bool(u_xlatb1)) ? vec3(0.680000007, 0.790000021, 0.270000011) : u_xlat6.xyz;
					    u_xlat0.xyz = (bool(u_xlatb0)) ? u_xlat7.xyz : u_xlat6.xyz;
					    u_xlatb18 = u_xlat0.x==0.0;
					    SV_Target0.xyz = (bool(u_xlatb18)) ? vec3(0.0299999993, 0.159999996, 0.330000013) : u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
			}
		}
	}
}