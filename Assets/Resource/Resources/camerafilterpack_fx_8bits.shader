Shader "CameraFilterPack/FX_8bits" {
	Properties {
		_MainTex ("Base (RGB)", 2D) = "white" {}
		_TimeX ("Time", Range(0, 1)) = 1
		_Distortion ("_Distortion", Range(1, 10)) = 1
	}
	SubShader {
		Pass {
			ZClip Off
			ZTest Always
			GpuProgramID 5954
			Program "vp" {
				SubProgram "d3d9 " {
					"vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_3_0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    dcl_texcoord o0.xy
					    dcl_position o1
					    dcl_color o2
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.z, c2, v0
					    dp4 r0.w, c3, v0
					    mov o0.xy, v2
					    mov o2, v1
					    mad o1.xy, r0.w, c255, r0
					    mov o1.zw, r0
					
					// approximately 8 instruction slots used"
				}
				SubProgram "d3d11 " {
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					out vec4 vs_COLOR0;
					vec4 u_xlat0;
					void main()
					{
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_COLOR0 = in_COLOR0;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Distortion;
					//   sampler2D _MainTex;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _Distortion  c0       1
					//   _MainTex     s0       1
					//
					
					    ps_3_0
					    def c1, 1000, -0.248746932, -0.0272114873, -0.0179268718
					    def c2, -0.0709900856, -0.428501189, -0.476837158, -0.0578343272
					    def c3, -0.253410816, -0.0392498374, -0.267751515, -0.160075366
					    def c4, -0.0464134216, -0.308615983, -0.0511035323, -0.319443643
					    def c5, -0.0293874145, -0.0187416077, -0.226284027, -1
					    def c6, -0.498618305, -0.584146023, -0.153264582, 2
					    def c7, -0.258132637, -0.0670471191, -0.0116295815, 0.100000001
					    def c8, -0.0793337822, -0.034081161, -7.93337822e-005, 0
					    def c9, -0.506023407, -0.122093141, -0.0979323387, 0
					    def c10, -0.221960247, -0.697200477, -0.230663598, 0
					    def c11, -0.156645298, -0.122093141, -0.513501465, 0
					    def c12, 0.159154937, 0.5, 6.28318548, -3.14159274
					    def c13, 0.30859375, 0.265625, 0.609375, 0.5
					    def c14, 0.63671875, 0.40625, 0.2265625, 0.75
					    def c15, 0, 0.62890625, 0.30078125, 0.26171875
					    def c16, 0.4140625, 0.75390625, 0.78125, 0.38671875
					    def c17, 0.6328125, 0.33984375, 0.64453125, 0.54296875
					    def c18, 0.359375, 0.67578125, 0.37109375, 0.68359375
					    def c19, 0.79296875, 0.8359375, 0.53515625, 10000
					    def c20, 0.4296875, 0.32421875, 0.04296875, 0
					    def c21, 0.796875, 0.49609375, 0.4609375, 0
					    def c22, 0.60546875, 0.88671875, 0.61328125, 0
					    def c23, 0.5390625, 0.49609375, 0.80078125, 0
					    def c24, 8.5, 0.0500000007, 0, 0
					    def c25, 6.5, 0.5, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mov r0.z, c1.x
					    texld r1, v0, s0
					    add r1.xyz, r1, c0.x
					    mul r2.xyz, r1, r1
					    mul r3.xyz, r1, r2
					    dp3 r1.w, r3, r3
					    min r0.y, r1.w, c1.x
					    mad r3.xyz, r1, r2, c1.yzww
					    dp3 r0.x, r3, r3
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r3.xyz, r0.w, c15.x, c15.yzww
					    mad r4.xyz, r1, r2, c2
					    dp3 r0.x, r4, r4
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    mad r4.xyz, r1, r2, c3
					    dp3 r0.x, r4, r4
					    add r1.w, -r0.y, r0.x
					    cmp r0.yz, r1.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, c15.x, r3
					    cmp r3.xyz, r0.w, r3, c16
					    cmp r4.xyz, r1.w, r4, r3
					    cmp r3.xyz, r1.w, r3, c17
					    mad r5.xyz, r1, r2, c4
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c18
					    mad r5.xyz, r1, r2, c5
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c13
					    mad r5.xyz, r1, r2, c6
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c19
					    mad r5.xyz, r1, r2, c7
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c14
					    mad r5.xyz, r1, r2, c8
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c20
					    mad r5.xyz, r1, r2, c9
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c21
					    mad r5.xyz, r1, r2, c2.w
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c16.w
					    mad r5.xyz, r1, r2, c3.w
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c17.w
					    mad r5.xyz, r1, r2, c10
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c22
					    mad r5.xyz, r1, r2, c11
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r0.yz, r0.w, r0, r0.xxyw
					    cmp r4.xyz, r0.w, r4, r3
					    cmp r3.xyz, r0.w, r3, c23
					    mad r5.xyz, r1, r2, c4.w
					    mad r1.xyz, r1, r2, c5.w
					    dp3 r1.x, r1, r1
					    dp3 r0.x, r5, r5
					    add r0.w, -r0.y, r0.x
					    cmp r1.yz, r0.w, r0, r0.xxyw
					    cmp r0.xyz, r0.w, r4, r3
					    cmp r2.xyz, r0.w, r3, c18.w
					    add r0.w, -r1.y, r1.x
					    cmp r1.xy, r0.w, r1.yzzw, r1
					    cmp r0.xyz, r0.w, r0, r2
					    cmp r2.xyz, r0.w, r2, -c5.w
					    add r0.w, r1.y, r1.x
					    rcp r0.w, r0.w
					    mul r0.w, r0.w, r1.y
					    dp2add r1.x, v0, c24, c24.z
					    mad r1.x, r1.x, c12.x, c12.y
					    frc r1.x, r1.x
					    mad r1.x, r1.x, c12.z, c12.w
					    sincos r3.y, r1.x
					    mul r1.x, r3.y, c19.w
					    dp2add r1.y, v0.yxzw, c25, c25.z
					    mad r1.y, r1.y, c12.x, c12.y
					    frc r1.y, r1.y
					    mad r1.y, r1.y, c12.z, c12.w
					    sincos r3.y, r1.y
					    add r1.y, r3_abs.y, c7.w
					    mul r1.x, r1.y, r1.x
					    frc r1.x, r1.x
					    mad r0.w, r1.x, c14.w, r0.w
					    add r1.x, v0.y, v0.x
					    mul r1.y, r1.x, c13.w
					    frc r1.z, r1.y
					    add r1.y, -r1.z, r1.y
					    mad r1.x, r1.y, -c6.w, r1.x
					    add r0.w, r0.w, -r1.x
					    cmp oC0.xyz, r0.w, r2, r0
					    mov oC0.w, -c5.w
					
					// approximately 138 instruction slots used (1 texture, 137 arithmetic)"
				}
				SubProgram "d3d11 " {
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						float _Distortion;
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					vec3 u_xlat3;
					vec3 u_xlat4;
					vec3 u_xlat5;
					float u_xlat7;
					float u_xlat18;
					bool u_xlatb18;
					bool u_xlatb19;
					void main()
					{
					    u_xlat0.z = 1000.0;
					    u_xlat1 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat1.xyz = u_xlat1.xyz + vec3(vec3(_Distortion, _Distortion, _Distortion));
					    u_xlat2.xyz = u_xlat1.xyz * u_xlat1.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat0.y = min(u_xlat18, 1000.0);
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.248746932, -0.0272114873, -0.0179268718);
					    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat3.xyz = bool(u_xlatb18) ? vec3(0.62890625, 0.30078125, 0.26171875) : vec3(0.0, 0.0, 0.0);
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.0709900856, -0.428501189, -0.476837158);
					    u_xlat0.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.253410816, -0.0392498374, -0.267751515);
					    u_xlat0.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlatb19 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb19)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = bool(u_xlatb18) ? u_xlat3.xyz : vec3(0.0, 0.0, 0.0);
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.4140625, 0.75390625, 0.78125) : u_xlat3.xyz;
					    u_xlat4.xyz = (bool(u_xlatb19)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb19)) ? vec3(0.6328125, 0.33984375, 0.64453125) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.0464134216, -0.308615983, -0.0511035323);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.359375, 0.67578125, 0.37109375) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.0293874145, -0.0187416077, -0.226284027);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.30859375, 0.265625, 0.609375) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.498618305, -0.584146023, -0.153264582);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.79296875, 0.8359375, 0.53515625) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.258132637, -0.0670471191, -0.0116295815);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.63671875, 0.40625, 0.2265625) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.0793337822, -0.034081161, -7.93337822e-05);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.4296875, 0.32421875, 0.04296875) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.506023407, -0.122093141, -0.0979323387);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.796875, 0.49609375, 0.4609375) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.0578343272, -0.0578343272, -0.0578343272);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.38671875, 0.38671875, 0.38671875) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.160075366, -0.160075366, -0.160075366);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.54296875, 0.54296875, 0.54296875) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.221960247, -0.697200477, -0.230663598);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.60546875, 0.88671875, 0.61328125) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.156645298, -0.122093141, -0.513501465);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat0.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat4.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (bool(u_xlatb18)) ? vec3(0.5390625, 0.49609375, 0.80078125) : u_xlat3.xyz;
					    u_xlat5.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-0.319443643, -0.319443643, -0.319443643);
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat2.xyz + vec3(-1.0, -1.0, -1.0);
					    u_xlat1.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb18 = u_xlat0.x<u_xlat0.y;
					    u_xlat1.yz = (bool(u_xlatb18)) ? u_xlat0.xy : u_xlat0.yz;
					    u_xlat0.xyz = (bool(u_xlatb18)) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat2.xyz = (bool(u_xlatb18)) ? vec3(0.68359375, 0.68359375, 0.68359375) : u_xlat3.xyz;
					    u_xlatb18 = u_xlat1.x<u_xlat1.y;
					    u_xlat1.xy = (bool(u_xlatb18)) ? u_xlat1.xy : u_xlat1.yz;
					    u_xlat0.xyz = (bool(u_xlatb18)) ? u_xlat2.xyz : u_xlat0.xyz;
					    u_xlat2.xyz = (bool(u_xlatb18)) ? vec3(1.0, 1.0, 1.0) : u_xlat2.xyz;
					    u_xlat18 = u_xlat1.y + u_xlat1.x;
					    u_xlat18 = u_xlat1.y / u_xlat18;
					    u_xlat1.x = dot(vs_TEXCOORD0.xy, vec2(8.5, 0.0500000007));
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * 10000.0;
					    u_xlat7 = dot(vs_TEXCOORD0.yx, vec2(6.5, 0.5));
					    u_xlat7 = sin(u_xlat7);
					    u_xlat7 = abs(u_xlat7) + 0.100000001;
					    u_xlat1.x = u_xlat7 * u_xlat1.x;
					    u_xlat1.x = fract(u_xlat1.x);
					    u_xlat18 = u_xlat1.x * 0.75 + u_xlat18;
					    u_xlat1.x = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat7 = u_xlat1.x * 0.5;
					    u_xlat7 = floor(u_xlat7);
					    u_xlat1.x = (-u_xlat7) * 2.0 + u_xlat1.x;
					    u_xlatb18 = u_xlat18<u_xlat1.x;
					    SV_Target0.xyz = (bool(u_xlatb18)) ? u_xlat0.xyz : u_xlat2.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
				}
			}
		}
	}
}